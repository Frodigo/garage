-- MySQL Script generated by MySQL Workbench
-- Fri May  9 20:28:22 2025
-- Model: Sakila Full    Version: 2.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema university
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema university
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `university` ;
USE `university` ;

-- -----------------------------------------------------
-- Table `university`.`Student`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`Student` (
  `studentId` INT NOT NULL,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `gender` VARCHAR(45) NOT NULL,
  `pesel` INT(11) NOT NULL,
  `birthDate` DATE NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `phone` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`studentId`),
  UNIQUE INDEX `idStudent_UNIQUE` (`studentId` ASC),
  UNIQUE INDEX `phone_UNIQUE` (`phone` ASC),
  UNIQUE INDEX `email_UNIQUE` (`email` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`Employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`Employee` (
  `employeeId` INT NOT NULL,
  `firstName` VARCHAR(45) NOT NULL,
  `lastName` VARCHAR(45) NOT NULL,
  `gender` CHAR NOT NULL,
  `phone` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`employeeId`),
  UNIQUE INDEX `idLecturer_UNIQUE` (`employeeId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`Faculty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`Faculty` (
  `facultyId` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `nip` INT(11) NULL,
  `website` VARCHAR(45) NULL,
  PRIMARY KEY (`facultyId`),
  UNIQUE INDEX `idUniversity_UNIQUE` (`facultyId` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`Semester`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`Semester` (
  `semesterId` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `startDate` DATE NOT NULL,
  `endDate` VARCHAR(45) NOT NULL,
  `academicYear` INT NOT NULL,
  `isActive` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`semesterId`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`StudentGroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`StudentGroup` (
  `groupId` INT NOT NULL,
  `supervisorId` INT NULL,
  `facultyId` INT NULL,
  `name` VARCHAR(45) NULL,
  `year` VARCHAR(45) NULL,
  `semesterId` INT NULL,
  PRIMARY KEY (`groupId`),
  UNIQUE INDEX `idStudentGroup_UNIQUE` (`groupId` ASC),
  UNIQUE INDEX `groupName_UNIQUE` (`name` ASC),
  INDEX `fk_StudentGroup_Employee_idx` (`supervisorId` ASC),
  INDEX `fk_StudentGroup_Faculty_idx` (`facultyId` ASC),
  INDEX `fk_StudentGroup_Semester_idx` (`semesterId` ASC),
  CONSTRAINT `fk_StudentGroup_Employee`
    FOREIGN KEY (`supervisorId`)
    REFERENCES `university`.`Employee` (`employeeId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_StudentGroup_Faculty`
    FOREIGN KEY (`facultyId`)
    REFERENCES `university`.`Faculty` (`facultyId`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_StudentGroup_Semester`
    FOREIGN KEY (`semesterId`)
    REFERENCES `university`.`Semester` (`semesterId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`FacultyAuthority`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`FacultyAuthority` (
  `facultyiD` INT NOT NULL,
  `title` VARCHAR(20) NOT NULL,
  `type` VARCHAR(45) NOT NULL,
  `email` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  PRIMARY KEY (`facultyiD`, `title`),
  CONSTRAINT `fk_FacultyAuthority_Faculty`
    FOREIGN KEY (`facultyiD`)
    REFERENCES `university`.`Faculty` (`facultyId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`FacultyDepartment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`FacultyDepartment` (
  `facultyId` INT NOT NULL,
  `FacultyDepartmentId` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  `openingHours` VARCHAR(45) NULL,
  PRIMARY KEY (`facultyId`, `FacultyDepartmentId`),
  CONSTRAINT `fk_FacultyDepartment_Faculty`
    FOREIGN KEY (`facultyId`)
    REFERENCES `university`.`Faculty` (`facultyId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`FacultyDepartmentPhone`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`FacultyDepartmentPhone` (
  `facultyDepartmentID` INT NOT NULL,
  `phone` VARCHAR(11) NOT NULL,
  PRIMARY KEY (`facultyDepartmentID`, `phone`),
  CONSTRAINT `fk_FacultyDepartmentPhone_FacultyDepartment`
    FOREIGN KEY (`facultyDepartmentID`)
    REFERENCES `university`.`FacultyDepartment` (`facultyId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`EmployeeContract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`EmployeeContract` (
  `employeeId` INT NOT NULL,
  `position` VARCHAR(45) NOT NULL,
  `hireDate` DATE NOT NULL,
  `terminationDate` DATE NOT NULL,
  `salary` VARCHAR(45) NOT NULL,
  `position` VARCHAR(45) NOT NULL,
  INDEX `fk_EmployeeContract_Employee_idx` (`employeeId` ASC),
  PRIMARY KEY (`employeeId`, `position`),
  CONSTRAINT `fk_EmployeeContract_Employee`
    FOREIGN KEY (`employeeId`)
    REFERENCES `university`.`Employee` (`employeeId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`Course`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`Course` (
  `courseId` INT NOT NULL,
  `employeeId` INT NOT NULL,
  `facultyId` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `ects` INT NOT NULL,
  `description` TEXT(500) NULL,
  PRIMARY KEY (`courseId`),
  UNIQUE INDEX `courseId_UNIQUE` (`courseId` ASC),
  INDEX `fk_Course_Faculty_idx` (`facultyId` ASC),
  INDEX `fk_Course_Employee_idx` (`employeeId` ASC),
  CONSTRAINT `fk_Course_Faculty`
    FOREIGN KEY (`facultyId`)
    REFERENCES `university`.`Faculty` (`facultyId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Course_Employee`
    FOREIGN KEY (`employeeId`)
    REFERENCES `university`.`Employee` (`employeeId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`Index`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`Index` (
  `indexId` INT NOT NULL,
  `studentId` INT NULL,
  `courseId` INT NULL,
  `semesterId` INT NULL,
  `number` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`indexId`),
  UNIQUE INDEX `indexId_UNIQUE` (`indexId` ASC),
  INDEX `fk_Index_Student_idx` (`studentId` ASC),
  INDEX `fk_Index_Course_idx` (`courseId` ASC),
  INDEX `fk_Index_Semester_idx` (`semesterId` ASC),
  CONSTRAINT `fk_Index_Student`
    FOREIGN KEY (`studentId`)
    REFERENCES `university`.`Student` (`studentId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Index_Course`
    FOREIGN KEY (`courseId`)
    REFERENCES `university`.`Course` (`courseId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Index_Semester`
    FOREIGN KEY (`semesterId`)
    REFERENCES `university`.`Semester` (`semesterId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`FacultyDepartmentAddress`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`FacultyDepartmentAddress` (
  `facultyDepartmentId` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NULL,
  `city` VARCHAR(45) NULL,
  `postalCode` VARCHAR(45) NULL,
  PRIMARY KEY (`facultyDepartmentId`, `name`),
  CONSTRAINT `fk_FacultyDepartmentAddress_FacultyDeparetment`
    FOREIGN KEY (`facultyDepartmentId`)
    REFERENCES `university`.`FacultyDepartment` (`facultyId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`EmployeeAddress`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`EmployeeAddress` (
  `employeeId` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `postalCode` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`employeeId`, `name`),
  CONSTRAINT `fk_EmployeeAddress_Employee`
    FOREIGN KEY (`employeeId`)
    REFERENCES `university`.`Employee` (`employeeId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`FacultyEmployee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`FacultyEmployee` (
  `facultyId` INT NOT NULL,
  `employeeId` INT NOT NULL,
  PRIMARY KEY (`employeeId`, `facultyId`),
  INDEX `fk_FacultyEmployee_Faculty_idx` (`facultyId` ASC),
  CONSTRAINT `fk_FacultyEmployee_Faculty`
    FOREIGN KEY (`facultyId`)
    REFERENCES `university`.`Faculty` (`facultyId`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_FacultyEmployee_Employee`
    FOREIGN KEY (`employeeId`)
    REFERENCES `university`.`Employee` (`employeeId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`StudentAddress`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`StudentAddress` (
  `studentId` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `city` VARCHAR(45) NOT NULL,
  `postalCode` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`studentId`, `name`),
  CONSTRAINT `fk_StudentAddress_Student`
    FOREIGN KEY ()
    REFERENCES `university`.`Student` ()
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`StudentGroupMembership`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`StudentGroupMembership` (
  `studentId` INT NOT NULL,
  `groupId` INT NOT NULL,
  PRIMARY KEY (`studentId`, `groupId`),
  INDEX `fk_StudentGroupMembership_StudentGroup_idx` (`groupId` ASC),
  CONSTRAINT `fk_StudentGroupMembership_Student`
    FOREIGN KEY (`studentId`)
    REFERENCES `university`.`Student` (`studentId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_StudentGroupMembership_StudentGroup`
    FOREIGN KEY (`groupId`)
    REFERENCES `university`.`StudentGroup` (`groupId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`Grade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`Grade` (
  `indexId` INT NOT NULL,
  `courseId` INT NOT NULL,
  `type` ENUM('partial', 'final') NOT NULL,
  `value` INT NOT NULL,
  `comment` VARCHAR(45) NULL,
  `semesterId` INT NULL,
  `studentId` INT NULL,
  PRIMARY KEY (`indexId`, `courseId`),
  INDEX `fk_Grade_Course_idx` (`courseId` ASC),
  INDEX `fk_Grade_Semester_idx` (`semesterId` ASC),
  INDEX `fk_Grade_Student_idx` (`studentId` ASC),
  CONSTRAINT `fk_Grade_Index`
    FOREIGN KEY (`indexId`)
    REFERENCES `university`.`Index` (`indexId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Grade_Course`
    FOREIGN KEY (`courseId`)
    REFERENCES `university`.`Course` (`courseId`)
    ON DELETE NO ACTION
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Grade_Semester`
    FOREIGN KEY (`semesterId`)
    REFERENCES `university`.`Semester` (`semesterId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Grade_Student`
    FOREIGN KEY (`studentId`)
    REFERENCES `university`.`Student` (`studentId`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `university`.`CourseSemester`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `university`.`CourseSemester` (
  `courseId` INT NOT NULL,
  `semesterId` INT NOT NULL,
  `startDate` DATE NULL,
  `endDate` DATE NULL,
  PRIMARY KEY (`courseId`, `semesterId`),
  INDEX `fk_CourseSemester_Semester_idx` (`semesterId` ASC),
  CONSTRAINT `fk_CourseSemester_Course`
    FOREIGN KEY (`courseId`)
    REFERENCES `university`.`Course` (`courseId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CourseSemester_Semester`
    FOREIGN KEY (`semesterId`)
    REFERENCES `university`.`Semester` (`semesterId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
